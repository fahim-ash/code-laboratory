name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    services:
      consul:
        image: hashicorp/consul:latest
        ports:
          - 8500:8500

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # Node.js (Frontend Build)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.13.1'
      - name: Install Dependencies and Build Frontend
        working-directory: frontend
        run: |
          npm install
          npm run build

      # auth_service (api gateway)
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.3'
      - name: Install Backend Dependencies
        working-directory: back_end/api_gateway
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      # python_service
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.3'
      - name: Install Backend Dependencies
        working-directory: back_end/python_service
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
      # - name: Run Django Tests ------------- need to write tests
      #   working-directory: backend
      #   run: |
      #     source venv/bin/activate
      #     python manage.py test

      # Nginx Validation (Optional)
      - name: Validate Nginx Configuration
        run: nginx -t

  # deploy:
  #   name: Deploy to Production
  #   runs-on: ubuntu-latest
  #   needs: build-and-test
  #   steps:
  #     - name: Deploy Using SSH
  #       uses: appleboy/ssh-action@v0.1.5
  #       with:
  #         host: ${{ secrets.SSH_HOST }}
  #         username: ${{ secrets.SSH_USERNAME }}
  #         key: ${{ secrets.SSH_PRIVATE_KEY }}
  #         script: |
  #           cd /path/to/project
  #           git pull origin main
  #           docker-compose down
  #           docker-compose up -d
