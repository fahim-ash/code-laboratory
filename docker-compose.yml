version: '3.3'

services:
  auth_service:
    build: ./back_end/auth_service
    container_name: auth_service
    ports:
      - "8000:8000"
    volumes:
      - ./back_end/auth_service:/app
    depends_on:
      - consul
    environment:
      - DJANGO_SETTINGS_MODULE=gateway.settings
    command: gunicorn --bind 0.0.0.0:8000 gateway.wsgi:application

  python_service:
    build: ./back_end/python_service
    container_name: python_service
    ports:
      - "8001:8001"
    volumes:
      - ./back_end/python_service:/app
    depends_on:
      - consul
    environment:
      - DJANGO_SETTINGS_MODULE=py_service.settings
    command: gunicorn --bind 0.0.0.0:8001 py_service.wsgi:application

  nginx:
    build: ./nginx
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf
    depends_on:
      - auth_service
      - frontend
      - consul


  consul:
    image: hashicorp/consul:1.15.2
    container_name: consul
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    volumes:
      - ./consul/auth_service.json:/consul/config/auth_service.json
      - ./consul/python_service.json:/consul/config/python_service.json

  frontend:
    build: ./front_end/app
    container_name: frontend
    ports:
      - "3000:3000"
    volumes:
      - ./front_end/app:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    command: npm start


  db:
    image: nouchka/sqlite3:latest
    container_name: sqlite
    volumes:
      - ./back_end/db.sqlite3:/data/db.sqlite3


  redis:
    image: redis:latest
    ports:
       - "6379:6379"
    volumes:
      - redis_data:/data


  celery:
    build: ./back_end/python_service
    command: celery -A py_service worker --loglevel=info
    volumes:
      - ./back_end/python_service:/app
    depends_on:
      - redis
      - python_service
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - DJANGO_SETTINGS_MODULE=py_service.settings


volumes:
  redis_data: